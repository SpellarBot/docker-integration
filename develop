#!/usr/bin/env bash

# Via: http://stackoverflow.com/questions/13322485/how-to-i-get-the-primary-ip-address-of-the-local-machine-on-linux-and-os-x
export HOST=$(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -n1)
export DOMAIN=$(echo `basename $PWD`).docker

export DB_ROOT_PASS=${DB_ROOT_PASS:-secret}
export DB_NAME=${DB_NAME:-website}
export DB_USER=${DB_USER:-website}
export DB_PASS=${DB_PASS:-secret}

# If $CI_BUILD_REF is set, the file is ran from GitLab
if [ ! -z "$CI_BUILD_REF" ]; then
    # Use custom composer cache dir for sharing cache along builds
    COMPOSER_CACHE_DIR="-e COMPOSER_CACHE_DIR=/composer_cache"

    # Use ci file for ci development
    COMPOSE_FILE="ci"

    # Enable pseudo-TTY allocation for CI (GitLab)
    TTY="-T"
else
    # Create volume (reuse is exists) to reuse
    # compose cache along multiple projects
    docker volume create --name=composer_cache >/dev/null

    # Disable pseudo-TTY allocation for CI (GitLab)
    TTY=""

    # Use default composer cache dir from composer
    COMPOSER_CACHE_DIR=""

    # Use dev file for local development
    COMPOSE_FILE="dev"
fi


COMPOSE="docker-compose -f docker-compose.$COMPOSE_FILE.yml"

if [ $# -gt 0 ];then

    # If "artisan" is used, pass-thru to "artisan" inside a new container
    if [ "$1" == "artisan" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            app \
            php artisan "$@"

    # If "composer" is used, pass-thru to "composer" inside a new container
    elif [ "$1" == "composer" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /app \
            $COMPOSER_CACHE_DIR \
            composer \
            composer "$@"

    # If "composer" is used, pass-thru to "composer" inside a new container
    elif [ "$1" == "php" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            php \
            php "$@"

    # If "test" is used, run unit tests, pass-thru any extra arguments to php-unit
    elif [ "$1" == "test" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            php \
            ./vendor/bin/phpunit "$@"


    # If "yarn" is used, run yarn from our node container
    elif [ "$1" == "yarn" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            node \
            yarn "$@"

    # If "gulp" is used, run gulp from our node container
    elif [ "$1" == "gulp" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            node \
            ./node_modules/.bin/gulp "$@"

    # If "share" is used, run ishi to share
    elif [ "$1" == "share" ]; then
        shift 1

        GREEN='\033[00;32m' YELLOW='\033[11;33m' NORMAL='\033[0m' RED='\033[0;31m'

        echo -e "${RED}Ishi is required for this to work correctly (https://github.com/suin/ishi)${NORMAL}"
        echo -e "IP for mobile use after setup: ${GREEN}${HOST}${NORMAL}"

        SHAREDOMAIN=${1:-"browsersync.$(echo $DOMAIN)"}
        PORT=${2:-3000}

        echo -e "\n${GREEN}Visit http://${HOST}:${PORT}${NORMAL}"
        echo -e "\n${NORMAL}Please enter sudo password:${NORMAL}"

        echo -e "${YELLOW}"
        sudo ${HOME}/go/bin/ishi --listen ${PORT} http://${SHAREDOMAIN}:${2:-$PORT}
        echo -e "${NORMAL}"

    else
        $COMPOSE "$@"
    fi
else
    $COMPOSE ps
fi