image: wearejust/docker-compose:latest

stages:
  - build
  - deploy

cache:
  paths:
    - vendor
    - node_modules

before_script:
  - cp .env.example .env

build:
  stage: build
  script:
    - sh develop composer install --no-dev --prefer-dist --optimize-autoloader --no-progress --no-interaction
    - sh develop yarn install
    - sh develop gulp
    - rsync -avzrq . dist --exclude='.git/' --exclude='node_modules/' --exclude='docker*' --exclude='/develop' --exclude='/deploy.php' --exclude='/gulpfile.js' --exclude='/grumphp.yml' --exclude='/codeception.yml' --exclude='tests/' --exclude='test/' --exclude='Test/' --exclude='package.json' --exclude='composer.json' --exclude='.gitlab-ci.yml' --exclude='.php_cs' --exclude='.gitattributes'  --exclude='.gitignore' --exclude='/.env'
  artifacts:
    expire_in: 1 week
    paths:
      - dist/

deploy_to_staging:
  stage: deploy
  script:
    - tar -C dist -zcf artifact.tar.gz .
    - sh develop composer install --prefer-dist --no-progress --no-interaction --no-scripts
    - sh develop php bin/dep deploy staging -vv --dist=artifact.tar.gz
  environment:
    name: staging
    url: http://XXX.com
  only:
    - staging
  artifacts:
    expire_in: 1 day
    paths:
      - storage/app/backups/    

deploy_to_production:
  stage: deploy
  script:
    - tar -C dist -zcf artifact.tar.gz .
    - sh develop composer install --prefer-dist --no-progress --no-interaction --no-scripts
    - sh develop php bin/dep deploy production -vv --dist=artifact.tar.gz
  environment:
    name: production
    url: http://XXX.com
  when: manual
  only:
    - master  
  artifacts:
    expire_in: 1 day
    paths:
      - storage/app/backups/  
